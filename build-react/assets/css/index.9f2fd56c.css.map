{"version":3,"file":"assets/css/index.9f2fd56c.css","mappings":"AAEA,qBAGC,mBAGD,KACC,kBACA,sBACA,uBAGD,KACC,mCACA,kEACA,kCACA,+EACA,0CAGD,EACC,SAGD,SAEC,aACA,eAGD,EACC,qBACA,mBAGD,eAEC,SACA,qBACA,cAEA,uBACC,WAIF,IACC,mBACA,gEAGD,qBACC,oBAGD,SCoKC,SACA,UDlKA,SAGD,MAEC,SACA,UACA,gBAGD,MACC,aCpDA,UDsDY,CCrDZ,WDqDY,CCkLX,WACC,qBACA,eApBY,CAqBZ,iBApBW,CAqBX,kBA1BY,CA6BX,4DAIA,2DAXF,WACC,qBACA,eApBY,CAqBZ,iBApBW,CAqBX,kBA1BY,CA6BX,4DAIA,2DAXF,WACC,oBACA,eApBY,CAqBZ,iBApBW,CAqBX,kBA1BY,CA6BX,4DAIA,2DAXF,WACC,oBACA,eApBY,CAqBZ,iBApBW,CAqBX,kBA1BY,CA6BX,4DAIA,2DC9PJ,MACC,2DD4QE,8pBASA,yDATA,wGASA,2BATA,sOASA,oNC/QF,gBCNA,YACC,qBDUF,UAEC,WAGD,KACC,aACA,gBACA,oBAGD,KACC,cACA,8BACA,gBACA,kBAGD,UACC,qBACA,kBACA,oBACA,eAGD,SACC,cACA,iBAGD,IACC,iG","sources":["webpack://webpack-bundler/./src/styles/base/_base.scss","webpack://webpack-bundler/./src/styles/abstracts/mixins/_index.scss","webpack://webpack-bundler/./src/styles/index.scss","webpack://webpack-bundler/./src/styles/components/atoms/typography/_index.scss"],"sourcesContent":["@use \"~styles/abstracts/mixins\" as *;\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n\tbox-sizing: inherit;\r\n}\r\n\r\nhtml {\r\n\toverflow-x: hidden;\r\n\tbox-sizing: border-box;\r\n\tscroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n\t-webkit-font-smoothing: antialiased;\r\n\ttext-decoration-skip: objects;\r\n\ttext-rendering: optimizelegibility;\r\n\ttext-size-adjust: 100%;\r\n\t-webkit-tap-highlight-color: transparent;\r\n}\r\n\r\np {\r\n\tmargin: 0;\r\n}\r\n\r\na,\r\nbutton {\r\n\toutline: none;\r\n\tcursor: pointer;\r\n}\r\n\r\na {\r\n\ttext-decoration: none;\r\n\tcolor: currentcolor;\r\n}\r\n\r\nfigure,\r\npicture {\r\n\tmargin: 0;\r\n\tdisplay: inline-block;\r\n\tline-height: 0;\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n\t}\r\n}\r\n\r\nimg {\r\n\tvertical-align: top;\r\n\tuser-select: none;\r\n}\r\n\r\nimg[draggable=\"false\"] {\r\n\tpointer-events: none;\r\n}\r\n\r\nfieldset {\r\n\t@include kill-space;\r\n\r\n\tborder: 0;\r\n}\r\n\r\nul,\r\nli {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tlist-style: none;\r\n}\r\n\r\nvideo {\r\n\toutline: none;\r\n\r\n\t@include wh(100%);\r\n}\r\n","@use \"sass:map\";\r\n@use \"sass:math\";\r\n@use \"sass:list\";\r\n@use \"sass:string\";\r\n@use \"~styles/abstracts/functions\" as main-functions;\r\n\r\n@mixin media($val, $breakpoint-direction-of-influence: max) {\r\n\t@media screen and (#{$breakpoint-direction-of-influence}-width: $val) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin keyframes($name) {\r\n\t@keyframes #{$name} {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin wh($width, $height: $width) {\r\n\twidth: $width;\r\n\theight: $height;\r\n}\r\n\r\n@mixin mx($left, $right: $left) {\r\n\tmargin: {\r\n\t\tright: $right;\r\n\t\tleft: $left;\r\n\t}\r\n}\r\n\r\n@mixin my($top, $bottom: $top) {\r\n\tmargin: {\r\n\t\ttop: $top;\r\n\t\tbottom: $bottom;\r\n\t}\r\n}\r\n\r\n@mixin px($left, $right: $left) {\r\n\tpadding: {\r\n\t\tright: $right;\r\n\t\tleft: $left;\r\n\t}\r\n}\r\n\r\n@mixin py($top, $bottom: $top) {\r\n\tpadding: {\r\n\t\ttop: $top;\r\n\t\tbottom: $bottom;\r\n\t}\r\n}\r\n\r\n@mixin relative {\r\n\tposition: relative;\r\n\ttop: 0;\r\n\tleft: 0;\r\n}\r\n\r\n@mixin absolute {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n}\r\n\r\n@mixin full-fill {\r\n\t@include absolute;\r\n\r\n\tright: 0;\r\n\tbottom: 0;\r\n}\r\n\r\n@mixin cover($val: cover) {\r\n\t@include wh(100%);\r\n\r\n\tobject-fit: $val;\r\n}\r\n\r\n@mixin kill-space {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n@mixin truncat($line) {\r\n\tdisplay: -webkit-box !important;\r\n\toverflow: hidden;\r\n\twhite-space: normal;\r\n\ttext-overflow: ellipsis;\r\n\t-webkit-line-clamp: $line;\r\n\t-webkit-box-orient: vertical;\r\n}\r\n\r\n@mixin ellipsis {\r\n\toverflow: hidden;\r\n\twhite-space: nowrap;\r\n\ttext-overflow: ellipsis;\r\n}\r\n\r\n@mixin l-center-y($type: absolute, $top: 50%) {\r\n\tposition: $type;\r\n\ttop: $top;\r\n\ttransform: translateY(-50%);\r\n}\r\n\r\n@mixin l-center-x($type: absolute, $left: 50%) {\r\n\tposition: $type;\r\n\tleft: $left;\r\n\ttransform: translateX(-50%);\r\n}\r\n\r\n@mixin l-center($type: absolute, $top: 50%, $left: 50%) {\r\n\tposition: $type;\r\n\ttop: $top;\r\n\tleft: $left;\r\n\ttransform: translate(-50%, -50%);\r\n}\r\n\r\n@mixin f-center-x($display: flex) {\r\n\tdisplay: $display;\r\n\tjustify-content: center;\r\n}\r\n\r\n@mixin f-center-y($display: flex) {\r\n\tdisplay: $display;\r\n\talign-items: center;\r\n}\r\n\r\n@mixin f-center($display: flex) {\r\n\tdisplay: $display;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n@mixin arrow($direction: down, $size: 5px, $color: #555) {\r\n\twidth: 0;\r\n\theight: 0;\r\n\r\n\t@if $direction == left {\r\n\t\tborder-top: $size solid transparent;\r\n\t\tborder-bottom: $size solid transparent;\r\n\t\tborder-right: $size solid $color;\r\n\t} @else if $direction == right {\r\n\t\tborder-top: $size solid transparent;\r\n\t\tborder-bottom: $size solid transparent;\r\n\t\tborder-left: $size solid $color;\r\n\t} @else if $direction == down {\r\n\t\tborder-left: $size solid transparent;\r\n\t\tborder-right: $size solid transparent;\r\n\t\tborder-top: $size solid $color;\r\n\t} @else {\r\n\t\tborder-left: $size solid transparent;\r\n\t\tborder-right: $size solid transparent;\r\n\t\tborder-bottom: $size solid $color;\r\n\t}\r\n}\r\n\r\n@mixin placeholder {\r\n\t&.placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&::placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&:input-placeholder {\r\n\t\t@content;\r\n\t}\r\n\r\n\t&::input-placeholder {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin flexbox(\r\n\t$display: flex,\r\n\t$direction: row,\r\n\t$placeContent: null,\r\n\t$placeItems: null,\r\n\t$wrap: nowrap,\r\n\t$shrink: 0,\r\n\t$grow: 0,\r\n\t$alignContent: null,\r\n\t$justifyContent: null,\r\n\t$alignItems: null,\r\n\t$justifyItems: null\r\n) {\r\n\tdisplay: $display;\r\n\tflex-flow: $direction $wrap;\r\n\r\n\t@if $placeContent == null {\r\n\t\t@if $alignContent {\r\n\t\t\talign-content: $alignContent;\r\n\t\t}\r\n\r\n\t\t@if $justifyContent {\r\n\t\t\tjustify-content: $justifyContent;\r\n\t\t}\r\n\t} @else {\r\n\t\tplace-content: $placeContent;\r\n\t}\r\n\r\n\t@if $placeItems == null {\r\n\t\t@if $alignItems {\r\n\t\t\talign-items: $alignItems;\r\n\t\t}\r\n\r\n\t\t@if $justifyItems {\r\n\t\t\tjustify-items: $justifyItems;\r\n\t\t}\r\n\t} @else {\r\n\t\tplace-items: $placeItems;\r\n\t}\r\n\r\n\tflex-shrink: $shrink;\r\n\tflex-grow: $grow;\r\n}\r\n\r\n@mixin kill-space {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n@mixin fonts(\r\n\t$filesDirPath,\r\n\t$fontFamily,\r\n\t$filesNames,\r\n\t$fontDisplay: block,\r\n\t$fontType: sans-serif\r\n) {\r\n\t@each $fileName in map.keys($filesNames) {\r\n\t\t$fontWeight: map.get($filesNames, $fileName, weight);\r\n\t\t$fontStyle: map.get($filesNames, $fileName, style);\r\n\t\t$fontsExts: map.get($filesNames, $fileName, exts);\r\n\t\t$isWoff2: false;\r\n\t\t$isWoff: false;\r\n\r\n\t\t@each $fontExt in $fontsExts {\r\n\t\t\t@if $fontExt == woff2 {\r\n\t\t\t\t$isWoff2: true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@each $fontExt in $fontsExts {\r\n\t\t\t@if $fontExt == woff {\r\n\t\t\t\t$isWoff: true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@font-face {\r\n\t\t\tfont-family: string.quote($fontFamily);\r\n\t\t\tfont-weight: $fontWeight;\r\n\t\t\tfont-style: $fontStyle;\r\n\t\t\tfont-display: $fontDisplay;\r\n\r\n\t\t\t@if $isWoff2 == true {\r\n\t\t\t\tsrc: url($filesDirPath + $fileName + \".woff2\") format(\"woff2\");\r\n\t\t\t}\r\n\r\n\t\t\t@if $isWoff == true {\r\n\t\t\t\tsrc: url($filesDirPath + $fileName + \".woff\") format(\"woff\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@mixin p($position: rel, $top: 0, $left: 0) {\r\n\tposition: main-functions.position($position);\r\n\ttop: $top;\r\n\tleft: $left;\r\n}\r\n\r\n@mixin root($vars) {\r\n\t@each $var-item, $val in $vars {\r\n\t\t@if string.index($var-item, \"to-rgb\") != null {\r\n\t\t\t--#{$var-item}: #{main-functions.to-rgb($val)};\r\n\t\t} @else if\r\n\t\t\tstring.index($var-item, \"rem\") !=\r\n\t\t\tnull and\r\n\t\t\t$var-item!=\r\n\t\t\t\"global--rem-size\"\r\n\t\t{\r\n\t\t\t--#{$var-item}: #{main-functions.rem($val)};\r\n\t\t} @else {\r\n\t\t\t--#{$var-item}: #{$val};\r\n\t\t}\r\n\t}\r\n}\r\n","@use './src/styles/abstracts/index' as *;\n@use \"sass:map\";\r\n@use \"sass:math\";\r\n@use \"sass:string\";\r\n@use \"base\" as *;\r\n@use \"components/atoms/typography/\" as *;\r\n@use \"components/atoms/typography/vars\" as *;\r\n\r\n:root {\r\n\t--root-font-size: map.get($global, global--html-font-size);\r\n\r\n\t@include root(\r\n\t\tmap-collect($colors, $global, $sys-colors, $token, $typography-size)\r\n\t);\r\n\r\n\tfont-size: map.get($global, global--html-font-size);\r\n}\r\n\r\n@include typography;\r\n\r\nhtml,\r\nbody {\r\n\twidth: 100%;\r\n}\r\n\r\nhtml {\r\n\tdisplay: flex;\r\n\tmin-height: 100%;\r\n\talign-items: stretch;\r\n}\r\n\r\nbody {\r\n\tpadding-top: 0;\r\n\tfont-family: Roboto, sans-serif;\r\n\tfont-weight: 300;\r\n\tfont-style: normal;\r\n}\r\n\r\n.svg-icon {\r\n\tdisplay: inline-block;\r\n\tfill: currentcolor;\r\n\tstroke: currentcolor;\r\n\tstroke-width: 0;\r\n}\r\n\r\n.carcass {\r\n\tmargin: 0 auto;\r\n\tmax-width: 1600px;\r\n}\r\n\r\n.df {\r\n\tdisplay: flex;\r\n}\r\n","@use \"sass:map\";\r\n@use \"sass:meta\";\r\n@use \"sass:list\";\r\n@use \"~styles/abstracts/functions\" as *;\r\n@use \"~styles/abstracts/mixins\" as *;\r\n@use \"~styles/abstracts/variables/\" as *;\r\n@use \"vars\" as *;\r\n\r\n@mixin typography() {\r\n\t.typography {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n"],"names":[],"sourceRoot":""}